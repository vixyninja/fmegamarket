apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services" 

project.ext.envConfigFiles = [
    debug: "configs/dev/.env.development",
    release: "configs/prod/.env.production",
]

apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

import com.android.build.OutputFile

react {
}


def enableProguardInReleaseBuilds = true

def enableIsShrinkResources = true

def jscFlavor = 'org.webkit:android-jsc:+'

apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    println("APP_NAME: " + project.env.get("APP_NAME"))

    namespace "com.fmegamarket"
    defaultConfig {
        applicationId project.env.get("APP_ID").toString()
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        resValue "string", "app_name", project.env.get("APP_NAME")
        versionCode project.env.get("VERSION_CODE").toInteger()
        versionName project.env.get("VERSION_NAME").toString()
    }

    def STORE_FILE = project.env.get("STORE_FILE").toString()
    def STORE_PASSWORD = project.env.get("STORE_PASSWORD").toString()
    def KEY_ALIAS = project.env.get("KEY_ALIAS").toString()
    def KEY_PASSWORD = project.env.get("KEY_PASSWORD").toString()

    signingConfigs {
        debug {
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }

        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableIsShrinkResources
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    
    implementation project(':react-native-lottie-splash-screen')
    implementation project(':react-native-config')
    implementation(platform("com.google.firebase:firebase-bom:32.6.0"))
    implementation("com.google.firebase:firebase-analytics")
    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
